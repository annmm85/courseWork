<?php

return [

    /*
       |--------------------------------------------------------------------------
       | Аутентификация по умолчанию
       |--------------------------------------------------------------------------
       |
       | Этот параметр управляет параметрами проверки подлинности по умолчанию "guard" и паролем
       | сбросом настроек для вашего приложения. Вы можете изменить эти настройки по умолчанию
       | по мере необходимости, но они идеально подходят для большинства приложений.
       |
       */

    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

    /*
      |--------------------------------------------------------------------------
      | Средства защиты от аутентификации - Authentication Guards
      |--------------------------------------------------------------------------
      |
      | Далее вы можете определить все средства защиты аутентификации для вашего приложения.
      | Конечно, для вас была определена отличная конфигурация по умолчанию
      | | здесь используется хранилище сеансов и Eloquentuserprovider.
      |
      | У всех драйверов аутентификации есть поставщик пользователей. Это определяет, как
  | пользователи фактически извлекаются из вашей базы данных или другого хранилища
      | механизмы, используемые этим приложением для сохранения данных вашего пользователя.
      |
      | Поддерживается: "сессия"
      |
      */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
|
    | У всех драйверов аутентификации есть пользовательский провайдер. Это определяет, как
    | пользователи фактически извлекаются из вашей базы данных или другого хранилища
    | механизмы, используемые этим приложением для сохранения данных вашего пользователя.
    |
    | Если у вас есть несколько пользовательских таблиц или моделей, вы можете настроить несколько
    | источники, которые представляют каждую модель / таблицу. Затем эти источники могут быть
    | назначены любым дополнительным средствам проверки подлинности, которые вы определили.
    |
    | Поддерживаемые: "база данных", "красноречивый"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\Models\User::class,
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
|
    | Вы можете указать несколько конфигураций сброса пароля, если у вас их больше.
    | более одной пользовательской таблицы или модели в приложении, и вы хотите иметь
    | отдельные настройки сброса пароля зависят от конкретных типов пользователей.
    |
    | | Время истечения срока действия - это количество минут, в течение которых будет выполняться каждый токен сброса.
    | считается действительным. Благодаря этой функции безопасности токены остаются недолговечными, поэтому
    | у них остается меньше времени на угадывание. Вы можете изменить это при необходимости.
    |
    | Настройка дроссельной заслонки - это количество секунд, которое пользователь должен подождать, прежде чем
    | генерирует больше токенов для сброса пароля. Это не позволяет пользователю
    | быстро генерировать очень большое количество токенов для сброса пароля.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_reset_tokens',
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Здесь вы можете указать количество секунд до подтверждения пароля.
    По истечении этого времени пользователю будет предложено повторно ввести свой пароль на
    экране
    | подтверждения. По умолчанию время ожидания составляет три часа.
    |
    */

    'password_timeout' => 10800,

];
